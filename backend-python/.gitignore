# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib60/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so shouldn't be committed.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# PEP 582; __pypackages__
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype
.pytype/

# Cython debug symbols
cython_debug/

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Sublime Text
*.sublime-workspace
*.sublime-project

# PyCharm
.idea/
*.iml

# dotenv
.env.*
!.env.example

# macOS
.DS_Store
._*

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Uploaded files (if stored locally and not meant for version control)
# Adjust this path if your UPLOAD_DIR is different or you want to ignore specific file types
# For example, if uploaded_videos is within backend-python/app/
# /app/uploaded_videos/
# Or if it's at the root of backend-python
# /uploaded_videos/

# If you have a specific directory for uploaded videos within your backend app,
# and it's not already covered by a broader rule (like `var/`),
# you might add it explicitly. For example:
# backend-python/uploaded_videos/
# backend-python/app/uploaded_videos/

# Specific to this project, based on docker-compose.yml and README
# The volume `uploaded_videos` is mounted at `/app/uploaded_videos` inside the container,
# which maps to `./backend-python/app/uploaded_videos` if you were to create it there.
# However, the code currently uses UPLOAD_DIR = "/app/uploaded_videos" which is the root of the app
# inside the container. If you create an `uploaded_videos` directory at the root of your
# `backend-python` folder on your host for development (matching the volume mount structure),
# you'd ignore it like this:
/uploaded_videos/
